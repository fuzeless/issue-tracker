# Sample About API
# type Query {
#     about: String!
#     name: String!
# }
# type Mutation {
#     setAboutMessage(message: String!): String
#     setName(name: String!): String
# }

#Custom Date scalar
scalar GraphQLDate

#Status enum
enum StatusType {
    New
    Assigned
    Fixed
    Closed
}

#Input
"Toned down Issue, used as inputs, without server generated values."
input IssueInputs {
    "If not defined, status will be set to 'New'."
    status: StatusType = New
    owner: String!
    effort: Int
    due: GraphQLDate
    title: String!
    description: String
}

# Issue API
type Issue {
    _id: ID!
    id: Int!
    status: StatusType!
    owner: String!
    created: GraphQLDate!
    effort: Int
    due: GraphQLDate
    title: String!
    description: String
}

type Query {
    about: String!
    name: String!
    issueList(
        status: StatusType
        effortMin: Int
        effortMax: Int
    ): [Issue!]!
    issue(id: Int!): Issue!
}
type Mutation {
    setAboutMessage(message: String!): String
    setName(name: String!): String
    issueAdd(issue: IssueInputs!): Issue!
}
